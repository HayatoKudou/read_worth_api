openapi: 3.0.0
info:
  version: 1.0.0
  title: Read Worth API
servers:
  - url: "http://localhost:8000/"
paths:
  /api/{clientId}/me:
    get:
      summary: 自分の情報
      parameters:
        - in: path
          name: clientId
          schema:
            type: integer
          required: true
          example: 1
      security:
        - Bearer: [ ]
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeResponse"
        "401":
          description: "apiトークンが無効の場合"
        "403":
          description: "指定された組織にユーザーがいない場合"
  /api/{clientId}/users:
    get:
      summary: 組織に所属しているユーザー情報
      parameters:
        - in: path
          name: clientId
          schema:
            type: integer
          required: true
          example: 1
      security:
        - Bearer: [ ]
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersListResponse"
        "401":
          description: "apiトークンが無効の場合"
        "403":
          description: "指定された組織にユーザーがいない場合"
  /api/{clientId}/user:
    put:
      summary: ユーザー更新
      parameters:
        - in: path
          name: clientId
          schema:
            type: integer
          required: true
          example: 1
      security:
        - Bearer: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateRequest"
      responses:
        "200":
          description: "OK"
        "401":
          description: "apiトークンが無効の場合"
        "403":
          description: "指定された組織にユーザーがいない場合"
        "422":
          description: "バリデーションエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserUpdateValidateErrorResponse"
    post:
      summary: ユーザー追加
      parameters:
        - in: path
          name: clientId
          schema:
            type: integer
          required: true
          example: 1
      security:
        - Bearer: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateRequest"
      responses:
        "200":
          description: "OK"
        "401":
          description: "apiトークンが無効の場合"
        "403":
          description: "指定された組織にユーザーがいない場合"
        "422":
          description: "バリデーションエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCreateValidateErrorResponse"
  /api/{clientId}/client:
    get:
      summary: 組織情報
      parameters:
        - in: path
          name: clientId
          schema:
            type: integer
          required: true
          example: 1
      security:
        - Bearer: [ ]
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientResponse"
        "401":
          description: "apiトークンが無効の場合"
        "403":
          description: "指定された組織にユーザーがいない場合"
  /api/{clientId}/clients:
    get:
      summary: 組織一覧
      parameters:
        - in: path
          name: clientId
          schema:
            type: integer
          required: true
          example: 1
      security:
        - Bearer: [ ]
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientsResponse"
        "401":
          description: "apiトークンが無効の場合"
        "403":
          description: "指定された組織にユーザーがいない場合"
  /api/{clientId}/books:
    get:
      summary: 書籍一覧
      parameters:
        - in: path
          name: clientId
          schema:
            type: integer
          required: true
          example: 1
      security:
        - Bearer: [ ]
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BooksResponse"
        "401":
          description: "apiトークンが無効の場合"
        "403":
          description: "指定された組織にユーザーがいない場合"
  /api/{clientId}/bookPurchaseApplies:
    get:
      summary: 書籍購入申請一覧
      parameters:
        - in: path
          name: clientId
          schema:
            type: integer
          required: true
          example: 1
      security:
        - Bearer: [ ]
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bookPurchaseAppliesListResponse"
        "401":
          description: "apiトークンが無効の場合"
        "403":
          description: "指定された組織にユーザーがいない場合"


components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bear
  schemas:
    MeResponse:
      type: object
      required:
        - id
        - name
        - email
        - apiToken
        - role
        - clients
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: "工藤"
        email:
          type: string
          example: "tetetest@gmail.com"
        apiToken:
          type: string
          example: "xtGq57ENtxfHL7MB63jRoEhPM5d7Bah2rXRpUGowAuXsE2lzlM8DvnqH163T"
        role:
          type: object
          required:
            - isAccountManager
            - isBookManager
            - isClientManager
          properties:
            isAccountManager:
              type: boolean
              example: true
            isBookManager:
              type: boolean
              example: true
            isClientManager:
              type: boolean
              example: true
        clients:
          type: array
          items:
            type: object
            required:
              - id
              - name
            properties:
              id:
                type: number
                example: 1
              name:
                type: string
                example: "テテマーチ"
    UsersListResponse:
      required:
        - users
      type: object
      properties:
        users:
          type: array
          items:
            type: object
            required:
              - id
              - name
              - email
              - apiToken
              - role
            properties:
              id:
                type: number
                example: 1
              name:
                type: string
                example: "工藤"
              email:
                type: string
                example: "tetetest@gmail.com"
              apiToken:
                type: string
                example: "xtGq57ENtxfHL7MB63jRoEhPM5d7Bah2rXRpUGowAuXsE2lzlM8DvnqH163T"
              role:
                type: object
                required:
                  - isAccountManager
                  - isBookManager
                  - isClientManager
                properties:
                  isAccountManager:
                    type: boolean
                    example: true
                  isBookManager:
                    type: boolean
                    example: true
                  isClientManager:
                    type: boolean
                    example: true
    UserUpdateRequest:
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "工藤"
        email:
          type: string
          example: "tetetest@gmail.com"
        roles:
          type: array
          example: [ "組織管理", "書籍管理" ]
          items:
            type: string
      required:
        - id
        - name
        - email
        - roles
    UserUpdateValidateErrorResponse:
      type: object
      properties:
        id:
          type: array
          items:
            type: string
            example: [ "ユーザーIDは必ず指定してください。" ]
        name:
          type: array
          items:
            type: string
            example: [ "名前は必ず指定してください。" ]
        email:
          type: array
          items:
            type: string
            example: [ "メールアドレスは必ず指定してください。" ]
        roles:
          type: array
          items:
            type: string
            example: [ "ロールは必ず指定してください。" ]
    UserCreateRequest:
      properties:
        name:
          type: string
          example: "工藤"
        email:
          type: string
          example: "tetetest@gmail.com"
        roles:
          type: array
          example: [ "組織管理", "書籍管理" ]
          items:
            type: string
      required:
        - name
        - email
        - roles
    UserCreateValidateErrorResponse:
      type: object
      properties:
        name:
          type: array
          items:
            type: string
            example: [ "名前は必ず指定してください。" ]
        email:
          type: array
          items:
            type: string
            example: [ "メールアドレスは必ず指定してください。" ]
        roles:
          type: array
          items:
            type: string
            example: [ "ロールは必ず指定してください。" ]
    ClientResponse:
      required:
        - id
        - name
        - plan
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: "工藤"
        plan:
          type: string
          example: "工藤"
    ClientsResponse:
      type: array
      items:
        required:
          - id
          - name
          - plan
        type: object
        properties:
          id:
            type: number
            example: 1
          name:
            type: string
            example: "工藤"
          plan:
            type: string
            example: "工藤"
    BooksResponse:
      required:
        - books
        - bookCategories
      type: object
      properties:
        books:
          type: array
          items:
            type: object
            required:
              - id
              - status
              - category
              - title
              - description
              - url
              - createdAt
              - purchaseApplicant
              - rentalApplicant
            properties:
              id:
                type: integer
                example: 1
              status:
                type: integer
                example: 1
              category:
                type: string
                example: "IT"
              title:
                type: string
                example: "プロダクトレッドグロース"
              description:
                type: string
                example: "マーケティングの本"
              image:
                type: string
                example: "gvdsngvaongaflafafeao"
              url:
                type: string
                example: "https://www.amazon.co.jp/gp/product/4297128462/ref=ox_sc_saved_image_3?smid=AN1VRQENFRJN5&psc=1"
              createdAt:
                type: string
                example: "2022/08/01"
              purchaseApplicant:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  name:
                    type: string
                    example: "たかし君"
              rentalApplicant:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  name:
                    type: string
                    example: "たかし君"
              reviews:
                type: object
                required:
                  - rate
                  - review
                  - reviewedAt
                  - reviewer
                properties:
                  rate:
                    type: number
                    example: 4
                  review:
                    type: string
                    example: "いい本だった"
                  reviewedAt:
                    type: string
                    example: "2022年09月04日 13時56分"
                  reviewer:
                    type: string
                    example: "たなか君"
                  rentalCount:
                    type: number
                    example: 5
        bookCategories:
          type: array
          items:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                example: "ALL"
    bookPurchaseAppliesListResponse:
      required:
        - slackCredentialExists
        - bookPurchaseApplies
      type: object
      properties:
        slackCredentialExists:
          type: boolean
          example: true
        bookPurchaseApplies:
          type: array
          items:
            type: object
            required:
              - reason
              - price
              - step
              - location
              - createdAt
              - user
              - book
            properties:
              reason:
                type: string
                example: "読みたいから"
              price:
                type: integer
                example: 3000
              step:
                type: integer
                example: 1
              location:
                type: string
                example: "7F本棚"
              createdAt:
                type: string
                example: "2022/08/01"
              user:
                type: object
                required:
                  - id
                  - name
                  - email
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "工藤"
                  email:
                    type: string
                    example: "kudoh115@gmail.com"
              book:
                type: object
                required:
                  - id
                  - status
                  - category
                  - title
                  - description
                  - url
                  - createdAt
                properties:
                  id:
                    type: integer
                    example: 1
                  status:
                    type: integer
                    example: 1
                  category:
                    type: string
                    example: "IT"
                  title:
                    type: string
                    example: "プロダクトレッドグロース"
                  description:
                    type: string
                    example: "マーケティングの本"
                  image:
                    type: string
                    example: "gvdsngvaongaflafafeao"
                  url:
                    type: string
                    example: "https://www.amazon.co.jp/gp/product/4297128462/ref=ox_sc_saved_image_3?smid=AN1VRQENFRJN5&psc=1"
                  createdAt:
                    type: string
                    example: "2022/08/01"
