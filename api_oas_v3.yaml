openapi: 3.0.0
info:
  version: 1.0.0
  title: Read Worth API
servers:
  - url: "http://localhost:8000/"
paths:
  /api/{clientId}/me:
    get:
      summary: 自分の情報
      parameters:
        - in: path
          name: clientId
          schema:
            type: integer
          required: true
          example: 1
      security:
        - Bearer: [ ]
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - email
                  - apiToken
                  - role
                  - clients
                properties:
                  id:
                    type: number
                    example: 1
                  name:
                    type: string
                    example: "工藤"
                  email:
                    type: string
                    example: "tetetest@gmail.com"
                  apiToken:
                    type: string
                    example: "xtGq57ENtxfHL7MB63jRoEhPM5d7Bah2rXRpUGowAuXsE2lzlM8DvnqH163T"
                  role:
                    type: object
                    required:
                      - isAccountManager
                      - isBookManager
                      - isClientManager
                    properties:
                      isAccountManager:
                        type: boolean
                        example: true
                      isBookManager:
                        type: boolean
                        example: true
                      isClientManager:
                        type: boolean
                        example: true
                  clients:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - name
                      properties:
                        id:
                          type: number
                          example: 1
                        name:
                          type: string
                          example: "テテマーチ"
        "401":
          description: "apiトークンが無効の場合"
        "403":
          description: "指定された組織にユーザーがいない場合"
  /api/{clientId}/users:
    get:
      summary: 組織に所属しているユーザー情報
      parameters:
        - in: path
          name: clientId
          schema:
            type: integer
          required: true
          example: 1
      security:
        - Bearer: [ ]
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                required:
                  - users
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - name
                        - email
                        - apiToken
                        - role
                      properties:
                        id:
                          type: number
                          example: 1
                        name:
                          type: string
                          example: "工藤"
                        email:
                          type: string
                          example: "tetetest@gmail.com"
                        apiToken:
                          type: string
                          example: "xtGq57ENtxfHL7MB63jRoEhPM5d7Bah2rXRpUGowAuXsE2lzlM8DvnqH163T"
                        role:
                          type: object
                          required:
                            - isAccountManager
                            - isBookManager
                            - isClientManager
                          properties:
                            isAccountManager:
                              type: boolean
                              example: true
                            isBookManager:
                              type: boolean
                              example: true
                            isClientManager:
                              type: boolean
                              example: true
        "401":
          description: "apiトークンが無効の場合"
        "403":
          description: "指定された組織にユーザーがいない場合"
  /api/{clientId}/user:
    put:
      summary: ユーザー更新
      parameters:
        - in: path
          name: clientId
          schema:
            type: integer
          required: true
          example: 1
      security:
        - Bearer: [ ]
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: "工藤"
                email:
                  type: string
                  example: "tetetest@gmail.com"
                roles:
                  type: array
                  example: [ "組織管理", "書籍管理" ]
                  items:
                    type: string
              required:
                - id
                - name
                - email
                - roles
      responses:
        "200":
          description: "OK"
        "401":
          description: "apiトークンが無効の場合"
        "403":
          description: "指定された組織にユーザーがいない場合"
        "422":
          description: "バリデーションエラー"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: array
                    items:
                      type: string
                      example: [ "ユーザーIDは必ず指定してください。" ]
                  name:
                    type: array
                    items:
                      type: string
                      example: [ "名前は必ず指定してください。" ]
                  email:
                    type: array
                    items:
                      type: string
                      example: [ "メールアドレスは必ず指定してください。" ]
                  roles:
                    type: array
                    items:
                      type: string
                      example: [ "ロールは必ず指定してください。" ]
    post:
      summary: ユーザー追加
      parameters:
        - in: path
          name: clientId
          schema:
            type: integer
          required: true
          example: 1
      security:
        - Bearer: [ ]
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  example: "工藤"
                email:
                  type: string
                  example: "tetetest@gmail.com"
                roles:
                  type: array
                  example: [ "組織管理", "書籍管理" ]
                  items:
                    type: string
              required:
                - name
                - email
                - roles
      responses:
        "200":
          description: "OK"
        "401":
          description: "apiトークンが無効の場合"
        "403":
          description: "指定された組織にユーザーがいない場合"
        "422":
          description: "バリデーションエラー"
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: array
                    items:
                      type: string
                      example: [ "名前は必ず指定してください。" ]
                  email:
                    type: array
                    items:
                      type: string
                      example: [ "メールアドレスは必ず指定してください。" ]
                  roles:
                    type: array
                    items:
                      type: string
                      example: [ "ロールは必ず指定してください。" ]

  /api/{clientId}/client:
    get:
      summary: 組織情報
      parameters:
        - in: path
          name: clientId
          schema:
            type: integer
          required: true
          example: 1
      security:
        - Bearer: [ ]
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                required:
                  - id
                  - name
                  - plan
                  - userCount
                  - bookCount
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  name:
                    type: string
                    example: "工藤"
                  plan:
                    type: string
                    example: "工藤"

        "401":
          description: "apiトークンが無効の場合"
        "403":
          description: "指定された組織にユーザーがいない場合"


components:
  securitySchemes:
    Bearer:
      type: http
      scheme: beare
